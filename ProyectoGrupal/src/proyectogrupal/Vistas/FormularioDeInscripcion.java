/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectogrupal.Vistas;

import java.beans.PropertyVetoException;
import java.util.List;
import proyectogrupal.Entidades.Alumno;
import javafx.scene.control.RadioButton;
import javax.swing.table.DefaultTableModel;
import proyectogrupal.AccesoADatos.AlumnoData;
import proyectogrupal.AccesoADatos.InscripcionData;
import proyectogrupal.Entidades.Inscripcion;
import proyectogrupal.Entidades.Materia;

/**
 *
 * @author Chocobo
 */
public class FormularioDeInscripcion extends javax.swing.JInternalFrame {

    private DefaultTableModel tabla = new DefaultTableModel();

    /**
     * Creates new form FormularioDeInscripcion
     */
    public FormularioDeInscripcion() {
        initComponents();
        CargarEncabezadoTabla();
        CargarComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Inscripciones");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Formulario de inscripcion");

        jLabel2.setText("Seleccione un alumno:");

        jComboBox1.setToolTipText("Seleccionar Alumno");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Listado de materias");

        jRadioButton1.setText("Materias inscriptas");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Materias NO inscriptas");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jButton1.setText("Inscribir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Anular inscripcion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jRadioButton1)
                        .addGap(46, 46, 46)
                        .addComponent(jRadioButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(94, 94, 94)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(53, 53, 53)
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        limpiarTabla();
        jRadioButton2.setSelected(false);
        jRadioButton1.setEnabled(false);//para q no pueda cambiar de Tildado a no tilado
        //sino lo que pasaba es q podia apregar y tildar varias veces
        jRadioButton2.setEnabled(true);//lo habilito para que pueda usar el otro boton
        InscripcionData inscridata = new InscripcionData();
        Alumno alumnoseleccionado = (Alumno) jComboBox1.getSelectedItem();
        for (Materia m : inscridata.obtenerMateriasCursadas(alumnoseleccionado.getIdalumno())) {
            tabla.addRow(new Object[]{
                m.getIdmateria(),
                m.getAniomateria(),
                m.getNombre()});
        }
        //Pongo el boton de Insertar materia no disponible
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        limpiarTabla();
        jRadioButton1.setSelected(false);
        jRadioButton1.setEnabled(true);//para q no pueda cambiar de Tildado a no tilado
        //sino lo que pasaba es q podia apregar y tildar varias veces
        jRadioButton2.setEnabled(false);//lo habilito para que pueda usar el otro boton
        InscripcionData inscridata = new InscripcionData();
        Alumno alumnoseleccionado = (Alumno) jComboBox1.getSelectedItem();
        for (Materia m : inscridata.obtenerMateriasNOCursadas(alumnoseleccionado.getIdalumno())) {
            tabla.addRow(new Object[]{
                m.getIdmateria(),
                m.getAniomateria(),
                m.getNombre()});
        }
        jButton2.setEnabled(false);
        jButton1.setEnabled(true);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        limpiarTabla();
        //no permito usar los botones al comienzo
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        if (jRadioButton1.isSelected()) {
            limpiarTabla();
            jRadioButton2.setSelected(false);
            InscripcionData inscridata = new InscripcionData();
            Alumno alumnoseleccionado = (Alumno) jComboBox1.getSelectedItem();
            for (Materia m : inscridata.obtenerMateriasCursadas(alumnoseleccionado.getIdalumno())) {
                tabla.addRow(new Object[]{
                    m.getIdmateria(),
                    m.getAniomateria(),
                    m.getNombre()});
            }
        }//Fin if
        else if (jRadioButton2.isSelected()) {
            limpiarTabla();
            jRadioButton1.setSelected(false);
            InscripcionData inscridata = new InscripcionData();
            Alumno alumnoseleccionado = (Alumno) jComboBox1.getSelectedItem();
            for (Materia m : inscridata.obtenerMateriasNOCursadas(alumnoseleccionado.getIdalumno())) {
                tabla.addRow(new Object[]{
                    m.getIdmateria(),
                    m.getAniomateria(),
                    m.getNombre()});
            }
        }//Fin Else

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // creo el tipo inscridata como siempre
        InscripcionData inscridata = new InscripcionData();
        //Obténgo el alumno seleccionado en el JComboBox
        Alumno alumnoseleccionado = (Alumno) jComboBox1.getSelectedItem();

        // Obténgo las filas seleccionadas en la JTable x si agrego mas de una materia
        int[] filasSeleccionadas = jTable1.getSelectedRows();

        // Recorro las filas seleccionadas y realizo la inscripción
        for (int fila : filasSeleccionadas) {
            int idMateria = (int) jTable1.getValueAt(fila, 0); // Suponiendo que la columna 0 contiene el ID de la materia
            // Deje la nota en 0 para luego modificarla segun materia pero podriamos pedirla
            double nota = 0.0;

            // Creo  Alumno y Materia relacionadas con la inscripción
            Alumno alumnoInscripcion = new Alumno();
            alumnoInscripcion.setIdAlumno(alumnoseleccionado.getIdalumno());

            Materia materiaInscripcion = new Materia();
            materiaInscripcion.setIdmateria(idMateria);

            // Creo Inscripcion con los datos
            Inscripcion inscripcion = new Inscripcion(alumnoInscripcion, materiaInscripcion, nota);

            // Llamo al método GuardarInscripcion para guardar la inscripción y le paso la inscripcion
            inscridata.GuardarInscripcion(inscripcion);
        }

        // Actualiza la JTable para que me muestre los nuevas materias borrando la que ya me inscribí
        //es el mismo codigo q usamos arriba en los botones de Inscripto o no Inscripto
        refreshTable();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // creo el tipo inscridata como siempre

        // Obtén el alumno seleccionado en el JComboBox
        Alumno alumnoseleccionado = (Alumno) jComboBox1.getSelectedItem();

        // Obtén las filas seleccionadas en la JTable
        int[] filasSeleccionadas = jTable1.getSelectedRows();
        // creo el tipo inscridata como siempre
        // Recorre las filas seleccionadas y realiza la eliminación de inscripciones
        InscripcionData inscridata = new InscripcionData();
        for (int fila : filasSeleccionadas) {
            int idMateria = (int) jTable1.getValueAt(fila, 0); // Suponiendo que la columna 0 contiene el ID de la materia

            // Llama a la función para borrar la inscripción
            inscridata.borrarInscripcionMateriaAlumno(alumnoseleccionado.getIdalumno(), idMateria);
        }
        //ESTO ES PARA REFRESCAR LA TABLA, NO SE SI HAY OTRA FORMA DE HACER.
        refreshTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
            System.err.println("Closing Exception");
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<Alumno> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void limpiarTabla() {
        int f = jTable1.getRowCount() - 1;
        for (int x = f; x >= 0; x--) {
            tabla.removeRow(x);
        }
    }

    private void CargarEncabezadoTabla() {
        tabla.addColumn("ID");
        tabla.addColumn("Nombre");
        tabla.addColumn("Año");
        jTable1.setModel(tabla);
    }

    private void CargarComboBox() {
        AlumnoData aludata = new AlumnoData();
        for (Alumno a : aludata.listarAlumnos()) {
            jComboBox1.addItem(a);
        }
    }

    private void refreshTable() {
        // Actualiza la JTable para que me muestre los nuevas materias borrando la que ya me inscribí
        //es el mismo codigo q usamos arriba en los botones de Inscripto o no Inscripto
        limpiarTabla();
        jRadioButton1.setSelected(false);
        InscripcionData inscridataData = new InscripcionData();
        Alumno alumnoSeleccionados = (Alumno) jComboBox1.getSelectedItem();
        for (Materia m : inscridataData.obtenerMateriasNOCursadas(alumnoSeleccionados.getIdalumno())) {
            tabla.addRow(new Object[]{
                m.getIdmateria(),
                m.getAniomateria(),
                m.getNombre()});
        }
    }

}
